@{
    ViewData["Title"] = "Maps Page";
}

<style>
    .maps-container {
        /*border: solid 1px black;*/
        overflow: scroll;
        position: relative;
    }
    .svg-container {
        position: absolute;
        height: 1180px;
        width: 1524px;
    }
</style>

<form class="form-inline mb-3">
        <label for="select1" class="col-form-label">Choose start point:</label>
        <select class="form-control ml-3" id="select1" style="width: 150px;" onchange="changeStartPoint(value)">
            @foreach (var point in ViewBag.Points)
            {
                <option value="@point.Id">@point.Name</option>
            }
        </select>

        <label for="select2" class="col-form-label ml-3">Choose end point:</label>
        <select class="form-control ml-3" id="select2" style="width: 150px;" onchange="changeEndPoint(value)">
            @foreach (var point in ViewBag.Points)
            {
                <option value="@point.Id">@point.Name</option>
            }
        </select>

        <button type="button" class="btn btn-primary ml-3" onclick="getTheShortestPath()">Find the shortest path</button>
</form>

<div class="maps-container">
    <svg class="svg-container">
        @foreach (var point in ViewBag.Points)
        {
            <circle cx="@point.X" cy="@point.Y" r="4" stroke="#7d7d7d" stroke-width="2" fill="#f5f7fa"
            style="cursor: pointer;" onclick="test(@point.Id)" id="point-@point.Id"/>
        }
        <polyline points="" style="fill:none; stroke:black" id="line"></polyline>
    </svg>
    <img src="https://res.cloudinary.com/diakiv/image/upload/v1586881393/main_f1_siuthk.svg" alt="">
</div>

@section Scripts
{
    <script>
      points = [];

      startPointId = undefined;
      endPointId = undefined;

      onInit();

      function onInit() {
        getAllPoints();
      }

      function getAllPoints() {
        fetch('/Points/GetPoints')
            .then(response => response.json())
            .then(allPoints => points = allPoints);
      }
        
      function test(x) {
          console.log(x);
      }

      function getTheShortestPath() {
          var select1 = document.getElementById("select1");
          var fromId = select1.options[select1.selectedIndex].value;

          var select2 = document.getElementById("select2");
          var toId = select2.options[select2.selectedIndex].value;

          fetch(`/Maps/GetFromTo?fromId=${fromId}&toId=${toId}`)
            .then(response => response.json())
            .then(path => {
                let linePoints = "";

                for (let i = 0; i < path.length; ++i) {
                    var point = points.find(p => p.id == path[i]);

                    if (point)
                        linePoints += `${point.x},${point.y} `;
                }

                document.getElementById("line").setAttribute("points", linePoints);
            }
          );
      }

      function changeStartPoint(pointId) {
          if(startPointId) {
              let oldPoint = document.getElementById(`point-${startPointId}`);
              oldPoint.setAttribute('stroke', '#7d7d7d');
              oldPoint.setAttribute('stroke-width', 2);
          }

          startPointId = pointId;

          var point = document.getElementById(`point-${pointId}`);
          point.setAttribute('stroke', '#00b31e');
          point.setAttribute('stroke-width', 4);
      }

      function changeEndPoint(pointId) {
          if(endPointId) {
              let oldPoint = document.getElementById(`point-${endPointId}`);
              oldPoint.setAttribute('stroke', '#7d7d7d');
              oldPoint.setAttribute('stroke-width', 2);
          }

          endPointId = pointId;

          var point = document.getElementById(`point-${pointId}`);
          point.setAttribute('stroke', '#bf0600');
          point.setAttribute('stroke-width', 4);
      }
    </script>
}
