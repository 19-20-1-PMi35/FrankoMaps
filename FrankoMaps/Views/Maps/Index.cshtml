@using Microsoft.AspNetCore.Identity
@using FrankoMaps.Areas.Identity.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
	ViewData["Title"] = "Maps Page";
}
@{int firstMapId = ViewBag.Maps[0].Id;}

<link rel="stylesheet" href="~/css/maps.css" />

<p>Select points from the drop-down lists or choose them on the map.</p>

<form class="form-inline mb-3">
	<label for="select1" class="col-form-label">Choose start point:</label>
	<select class="form-control ml-3" id="select1" style="width: 150px;" onchange="changeStartPoint(value)">
		<option value="-1" selected disabled hidden>Start point</option>
		@foreach (var point in ViewBag.Points)
		{
            if (point.IsVisible || User.IsInRole("Admin"))
            {
                <option value="@point.Id">@point.Name</option>
            }
			
		}
	</select>

	<label for="select2" class="col-form-label ml-3">Choose end point:</label>
	<select class="form-control ml-3" id="select2" style="width: 150px;" onchange="changeEndPoint(value)">
		<option value="-1" selected disabled hidden>End point</option>
		@foreach (var point in ViewBag.Points)
		{
            if (point.IsVisible || User.IsInRole("Admin"))
            {
                <option value="@point.Id">@point.Name</option>
            }
		}
	</select>

	<button type="button" class="btn btn-primary ml-3" onclick="getTheShortestPath()">Find the shortest path</button>
	<button type="button" class="btn btn-warning ml-3" onclick="saveFavouriteRote()"> <i class="fas fa-star"></i></button>
</form>

<div class="btn-group mb-3" role="group" aria-label="Basic example">
	@foreach (var map in ViewBag.Maps)
	{
		<button type="button" class="btn btn-secondary" onclick="chooseMap(@map.Id)">@map.Name</button>
	}
</div>
@if (User.IsInRole("Admin"))
{
	<p style="color:gray;font-style:italic;font:small">*Double click on map to add new point</p>
}

@foreach (var map in ViewBag.Maps)
{
	<div class="maps-container" id="map-container-@map.Id" style="user-select:none">
		<svg class="svg-container" id="svg-container-@map.Id">
			@{
				List<PointViewModel> points = ViewBag.Points;
			}
			@foreach (var point in points.Where(p => p.MapId == map.Id))
			{
				@if (point.IsVisible || User.IsInRole("Admin"))
				{
					<circle cx="@point.X" cy="@point.Y" r="4" stroke="#000000" stroke-width="1.5" fill="#f5f7fa"
							id="point-@point.Id" style="cursor: pointer;" data-toggle="tooltip" title="@point.Name" onclick="changePoints(@point.Id)" />
				}
			}
			<polyline points="" style="fill:none; stroke:#004085; stroke-width:2" id="line-@map.Id"></polyline>
		</svg>
		<img src="@map.Image" alt="" id="img-@map.Id" onload="{
				let mapImg = document.getElementById('img-@map.Id');
				let svgCointainer = document.getElementById('svg-container-@map.Id');
				svgCointainer.setAttribute('height', `${mapImg.height}px`);
				svgCointainer.setAttribute('width', `${mapImg.width}px`);
				if('@map.Id' != '@firstMapId'){
					let mapContainer = document.getElementById('map-container-@map.Id');
					mapContainer.style.display = 'none';
				}
			}">
	</div>
}


<script src="~/js/maps.js" asp-append-version="true"></script>
@section Scripts {
	<script>
		currentMapId = Number('@firstMapId');
        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
        })
	</script>
	@if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
	{
		<script>
			$(document).ready(function () {
				$(".svg-container").dblclick(function (event) {
					var relX = event.pageX - $(this).offset().left;
					var relY = event.pageY - $(this).offset().top;
					var result = confirm("Add new point (" + parseInt(relX) + ", " + parseInt(relY) + ")?");
					if (result == true) {
						window.location.href = "Points/Create?mapId=" + currentMapId + "&x=" + parseInt(relX) + "&y=" + parseInt(relY);
					}
				});
			});
		</script>
	}
	@if (SignInManager.IsSignedIn(User))
	{
		<script>
			function saveFavouriteRote() {
				var firstDopwDown = document.getElementById("select1");
				var startPoint = firstDopwDown.options[firstDopwDown.selectedIndex].value;
				var startPointName = firstDopwDown.options[firstDopwDown.selectedIndex].text;
				var secondDopwDown = document.getElementById("select2");
				var endPoint = secondDopwDown.options[secondDopwDown.selectedIndex].value;
				var endPointName = secondDopwDown.options[secondDopwDown.selectedIndex].text;
				$.post("/Favourite/Create",
					{ start: startPoint, end: endPoint, startName: startPointName, endName: endPointName },
					function (data) {
						if (data.success) {
							alert("Succesfully saved to database: " + startPointName + " " + endPointName);
						}
					});
			}
		</script>
	}

}
